// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  seed    = "prisma/seed.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  CREATED
  PROCESSING
  SHIPPING
  DELIVERED
}

enum ProductStatus {
  BLOCKED
  INSTOCK
  OUTOFSTOCK
  DOESNTEXIST
}

model OrderState {
  id          String          @id @default(uuid())
  state       String          @unique
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?        
  updatedAt   DateTime        @updatedAt
}

model ProductState {
  id        String            @id @default(uuid())
  state     String            @unique 
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?        
  updatedAt   DateTime        @updatedAt
}

model Product {
  id         String            @id @default(uuid())
  name       String     
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?        
  updatedAt   DateTime        @updatedAt
}

model Category {
  id          String      @id @default(uuid())
  name        String
  description String
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?        
  updatedAt   DateTime        @updatedAt
}

model Order {
  id          String          @id @default(uuid())
  description String
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?        
  updatedAt   DateTime        @updatedAt
}

model ProductStatusIntermediate {
  parentID  String  @unique()
  childID   String
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?        
  updatedAt   DateTime        @updatedAt
}

model OrderStatusIntermediate {
  parentID  String  @unique()
  childID   String
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?        
  updatedAt   DateTime        @updatedAt
}

model OrderOldIntermediate {
  parentID  String  @unique()
  childID   String
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?        
  updatedAt   DateTime        @updatedAt
}

model OrderProductsIntermediate {
  parentID  String  @unique()
  childID   String
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?        
  updatedAt   DateTime        @updatedAt
}

model ProductCategoriesIntermediate {
  parentID  String  @unique()
  childID   String
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?        
  updatedAt   DateTime        @updatedAt
}

model StateProductIntermediate {
  parentID  String  @unique()
  childID   String
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?        
  updatedAt   DateTime        @updatedAt
}

model StateOrderIntermediate {
  parentID  String  @unique()
  childID   String
  createdAt   DateTime        @default(now())
  deletedAt   DateTime?
  updatedAt   DateTime        @updatedAt
}

// FINISH ADDING DELETED CREATED UPDATED, FIX METHODS
// LOWER CASE EVERYTHING

